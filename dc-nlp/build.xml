<!--
OVERVIEW
========

Directories:
	src - source files
	bin - build files
	dist - distribution (jar) files
	lib - library files

Targets:
	clean - deletes build and dist directories
	init - makes build and dist directories
	compile - compile everything from src to build
	dist - jar everything from build to a jar in dist
	run - runs the jar in dist

-->

<project name="dc-nlp" default="run" basedir=".">
	<description>
		dc-nlp is an analysis of David Copperfield through the tools provided by natural language processing.
	</description>

	<property name="src" location="src"/>
	<property name="build" location="bin"/>
	<property name="dist" location="dist"/>
	<property name="dist-name" location="${dist}/${ant.project.name}.jar"/>
	<property name="lib" location="lib"/>
	<property name="main-class" value="dcnlp.Main"/>

	<!-- CLEAN -->
	<target name="clean" description="delete build and dist directories">
		<echo level="info" message="Deleting ${build} directory..."/>
		<delete dir="${build}"/>

		<echo level="info" message="Deleting ${dist} directory..."/>
		<delete dir="${dist}"/>

		<echo level="info" message="Clean completed."/>
	</target>

	<!-- INIT -->
	<target name="init" description="prepares directories">
		<echo level="info" message="Creating ${build} directory..."/>
		<mkdir dir="${build}"/>

		<echo level="info" message="Creating ${dist} directory..."/>
		<mkdir dir="${dist}"/>

		<echo level="info" message="Init completed."/>
	</target>

	<!-- COMPILE -->
	<target name="compile" depends="init" description="compile the source">
		<echo level="info" message="Compiling source..."/>
		<javac srcdir="${src}" destdir="${build}" includeantruntime="false">
			<classpath>
				<pathelement path="${lib}/jwnl-1.3.3.jar"/>
				<pathelement path="${lib}/opennlp-maxent-3.0.3.jar"/>
				<pathelement path="${lib}/opennlp-tools-1.5.3.jar"/>
				<pathelement path="${lib}/opennlp-uima-1.5.3.jar"/>
			</classpath>
		</javac>

		<echo level="info" message="Compilation completed."/>
	</target>

	<!-- DIST -->
	<target name="dist" depends="compile" description="generate distribution">
		<echo level="info" message="Packaging JAR file at ${dist-name}..."/>
		<jar destfile="${dist-name}" basedir="${build}">
			<zipgroupfileset dir="${lib}" includes="**/*.jar"/>

			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
		</jar>

		<echo level="info" message="Packaging completed."/>
	</target>

	<!-- RUN -->
	<target name="run" depends="dist" description="run application">
		<echo level="info" message="Running ${ant.project.name}..."/>
		<java jar="${dist-name}" fork="true"/>
	</target>
</project>
